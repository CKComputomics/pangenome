name: nf-core CI
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types: [published]

jobs:
  test:
    name: Run workflow tests
    # Only run on push if this is the nf-core dev branch (merged PRs)
    if: ${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/pangenome') }}
    runs-on: ubuntu-latest
    env:
      NXF_VER: ${{ matrix.nxf_ver }}
      NXF_ANSI_LOG: false
    strategy:
      matrix:
        # Nextflow versions: check pipeline minimum and current latest
        nxf_ver: ['20.10.0', '']
        parameters:
          - '--do_viz'
          - '--do_layout'
          - '--do_stats'
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - name: Check if Dockerfile or Conda environment changed
        uses: technote-space/get-diff-action@v4
        with:
          FILES: |
            Dockerfile
            environment.yml

      - name: Build new docker image
        if: env.MATCHED_FILES
        run: docker build --no-cache . -t nfcore/pangenome:dev

      - name: Pull docker image
        if: ${{ !env.MATCHED_FILES }}
        run: |
          docker pull nfcore/pangenome:dev
          docker tag nfcore/pangenome:dev nfcore/pangenome:dev

      - name: Install Nextflow
        env:
          CAPSULE_LOG: none
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Run pipeline with test data
        # TODO nf-core: You can customise CI pipeline run tests as required
        # For example: adding multiple test runs with different parameters
        # Remember that you can parallelise this by using strategy.matrix
        # We also test basic visualization and reporting options here
        run: |
          nextflow run ${GITHUB_WORKSPACE} -profile test,docker ${{ matrix.parameters }}
  edyeet:
      name: Test edyeet with workflow parameters
      if: ${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/pangenome') }}
      runs-on: ubuntu-latest
      env:
        NXF_VER: ${{ matrix.nxf_ver }}
        NXF_ANSI_LOG: false
      strategy:
        matrix:
          # Nextflow versions: check pipeline minimum and current latest
          nxf_ver: ['20.10.0', '']
          parameters: 
            - '--alignment_map_pct_id 70'
            - '--edyeet_align_pct_id 70'
            - '--alignment_n_secondary 2'
            - '--alignment_segment_length 5000'
            - '--alignment_merge_segments'
            - '--alignment_no_splits'
            - '--alingment_block_length 40000'
      steps:
        - name: Check out pipeline code
          uses: actions/checkout@v2
          
        - name: Check if Dockerfile or Conda environment changed
          uses: technote-space/get-diff-action@v4
          with:
            FILES: |
              Dockerfile
              environment.yml

        - name: Build new docker image
          if: env.MATCHED_FILES
          run: docker build --no-cache . -t nfcore/pangenome:dev

        - name: Pull docker image
          if: ${{ !env.MATCHED_FILES }}
          run: |
            docker pull nfcore/pangenome:dev
            docker tag nfcore/pangenome:dev nfcore/pangenome:dev

        - name: Install Nextflow
          run: |
            wget -qO- get.nextflow.io | bash
            sudo mv nextflow /usr/local/bin/
        - name: Run pipeline with edyeet and various parameters
          run: |
            nextflow run ${GITHUB_WORKSPACE} -profile test,docker ${{ matrix.parameters }}
  wfmash:
      name: Test wfmash with workflow parameters
      if: ${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/pangenome') }}
      runs-on: ubuntu-latest
      env:
        NXF_VER: ${{ matrix.nxf_ver }}
        NXF_ANSI_LOG: false
      strategy:
        matrix:
          # Nextflow versions: check pipeline minimum and current latest
          nxf_ver: ['20.10.0', '']
          parameters: 
            - '--wfmash --alignment_map_pct_id 70'
            - '--wfmash --alignment_n_secondary 2'
            - '--wfmash --alignment_segment_length 5000'
            - '--wfmash --alignment_merge_segments'
            - '--wfmash --alignment_no_splits'
            - '--wfmash --alingment_block_length 40000'
      steps:
        - name: Check out pipeline code
          uses: actions/checkout@v2
          
        - name: Check if Dockerfile or Conda environment changed
          uses: technote-space/get-diff-action@v4
          with:
            FILES: |
              Dockerfile
              environment.yml

        - name: Build new docker image
          if: env.MATCHED_FILES
          run: docker build --no-cache . -t nfcore/pangenome:dev

        - name: Pull docker image
          if: ${{ !env.MATCHED_FILES }}
          run: |
            docker pull nfcore/pangenome:dev
            docker tag nfcore/pangenome:dev nfcore/pangenome:dev

        - name: Install Nextflow
          run: |
            wget -qO- get.nextflow.io | bash
            sudo mv nextflow /usr/local/bin/
        - name: Run pipeline with wfmash and various parameters
          run: |
            nextflow run ${GITHUB_WORKSPACE} -profile test,docker ${{ matrix.parameters }}            
  seqwish:
      name: Test seqwish with workflow parameters
      if: ${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/pangenome') }}
      runs-on: ubuntu-latest
      env:
        NXF_VER: ${{ matrix.nxf_ver }}
        NXF_ANSI_LOG: false
      strategy:
        matrix:
          # Nextflow versions: check pipeline minimum and current latest
          nxf_ver: ['20.10.0', '']
          parameters: 
            - '--seqwish_min_match_length 13'
            - '--seqwish_transclose_batch 10000'
      steps:
        - name: Check out pipeline code
          uses: actions/checkout@v2

        - name: Check if Dockerfile or Conda environment changed
          uses: technote-space/get-diff-action@v4
          with:
            FILES: |
              Dockerfile
              environment.yml

        - name: Build new docker image
          if: env.MATCHED_FILES
          run: docker build --no-cache . -t nfcore/pangenome:dev

        - name: Pull docker image
          if: ${{ !env.MATCHED_FILES }}
          run: |
            docker pull nfcore/pangenome:dev
            docker tag nfcore/pangenome:dev nfcore/pangenome:dev

        - name: Install Nextflow
          run: |
            wget -qO- get.nextflow.io | bash
            sudo mv nextflow /usr/local/bin/
        - name: Run pipeline with seqwish and various parameters
          run: |
            nextflow run ${GITHUB_WORKSPACE} -profile test,docker ${{ matrix.parameters }}
  smoothxg:
      name: Test smoothxg with workflow parameters
      if: ${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/pangenome') }}
      runs-on: ubuntu-latest
      env:
        NXF_VER: ${{ matrix.nxf_ver }}
        NXF_ANSI_LOG: false
      strategy:
        matrix:
          # Nextflow versions: check pipeline minimum and current latest
          nxf_ver: ['20.10.0', '']
          parameters: 
            - '--smoothxg_max_block_weight 20000'
            - '--smoothxg_max_path_jump 10000'
            - '--smoothxg_max_edge_jump 6000'
            - '--smoothxg_max_poa_length 20000'
            - '--smoothxg_consensus_spec 11,111,1111,11111'
            - '--smoothxg_block_id_min 0.7'
            - '--smoothxg_ratio_contain 0.3'
            - '--smoothxg_poa_params 2,4,6,2,24,1'
      steps:
        - name: Check out pipeline code
          uses: actions/checkout@v2

        - name: Check if Dockerfile or Conda environment changed
          uses: technote-space/get-diff-action@v4
          with:
            FILES: |
              Dockerfile
              environment.yml

        - name: Build new docker image
          if: env.MATCHED_FILES
          run: docker build --no-cache . -t nfcore/pangenome:dev

        - name: Pull docker image
          if: ${{ !env.MATCHED_FILES }}
          run: |
            docker pull nfcore/pangenome:dev
            docker tag nfcore/pangenome:dev nfcore/pangenome:dev

        - name: Install Nextflow
          run: |
            wget -qO- get.nextflow.io | bash
            sudo mv nextflow /usr/local/bin/
        - name: Run pipeline with smoothxg and various parameters
          run: |
            nextflow run ${GITHUB_WORKSPACE} -profile test,docker ${{ matrix.parameters }}                        

